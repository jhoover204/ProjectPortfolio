"[32,36)","[36,40)") ~ "Medium Life Quality [24,40)",
TRUE ~ "High Life Quality [40,52)"))
##calc cond prob in groups by marginalizing over the groups here
casp.ed.df <- casp.ed.df %>% group_by(education, class, dag) %>%
summarise(cond.probs = sum(cond.probs)) %>% ungroup()
casp.ed.df$casp = casp.ed.df$class
casp.ed.df$casp = factor(casp.ed.df$casp,
levels = c("Low Life Quality [16,24)",
"Medium Life Quality [24,40)",
"High Life Quality [40,52)"))
##Plot conditional probabilities for low/high casp given education levels
##Only plotting DAG39 because relatively equivalent to DAG32
ggplot(casp.ed.df %>% dplyr::filter(dag == "dag_39"))+
geom_bar(aes(x = education, y = cond.probs),
fill = "lightblue", color = "darkblue",
stat = "identity")+
labs(x="Education (ISCED)", y = "P(CASP|Education)")+
facet_wrap(~casp, nrow = 4)+
theme_bw()+
ggtitle("DAG 39: Probability of Quality of Life (CASP) Given Education")+
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, size = 8, hjust = 1))
ggsave("dag39_casp_through_education_query.png", width = 7, height = 7)
##We query the graph to find the conditional probability of depression
##given quality of life
casp.levels <- levels(train_6$casp) ##levels defined before
depr.fixed <- as.character(seq(0,12)) ##least depressed to most depression
##To query the graph we use a for loop so that we can
##Check the probability of quality of life given each level of the data
##Loop follows the same structure as the first with age so it is not commented
depr.casp.res <- c()
for(dag in dagfit.list) {
for (depr.i in depr.fixed) {
temp.res <- c()
for (j in casp.levels) {
temp.res <- c(temp.res,
cpquery(
dag,
n = 10 ^ 6,
evidence = (casp == j),
event = (depression %in% depr.i)
))
}
depr.casp.res <- c(depr.casp.res, temp.res)
}
}
##create conditional probability data frame
depr.casp.df <- data.frame(cond.probs = depr.casp.res,
casp = rep(rep(casp.levels, length(depr.fixed)),
length(dagfit.list)),
depression = factor(rep(rep(depr.fixed,
each = length(casp.levels)),
length(dagfit.list)),
levels = depr.fixed),
dag = rep(c("dag_39", "dag_32", "dag_31"),
each = length(casp.levels)*length(depr.fixed)))
depr.casp.df$casp <- factor(depr.casp.df$casp, levels = casp.levels)
##Create depression groups
depr.casp.df <- depr.casp.df %>%
mutate(class = case_when(depression %in% c("0", "1", "2", "3") ~ "Low Depression (0-3)",
depression %in% c("4", "5", "6", "7", "8") ~ "Mild Depression (4-8)",
TRUE ~ "High Depression (9-12)"))
##calc cond prob in depression groups by marginalizing over the groups
depr.casp.df <- depr.casp.df %>% group_by(casp, class, dag) %>%
summarise(cond.probs = sum(cond.probs)) %>% ungroup()
depr.casp.df$depression = depr.casp.df$class
depr.casp.df$depression = factor(depr.casp.df$depression,
levels = c("Low Depression (0-3)",
"Mild Depression (4-8)",
"High Depression (9-12)"))
#Plot conditional probabilities for low/Mid/high Depr given sphus levels
##Only plotting dag39 because relatively equivalent to dag32
ggplot(depr.casp.df %>% dplyr::filter(dag == "dag_39"))+
geom_bar(aes(x = casp, y = cond.probs),
fill = "lightblue", color = "darkblue",
stat = "identity")+
labs(x = "Quality of life (CASP)", y = "P(Depression|CASP)")+
facet_wrap(~depression, nrow = 4)+
theme_bw()+
ggtitle("DAG 39: Probability of Depression Given Quality of Life (CASP)")+
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, size = 8, hjust = 1))
ggsave("dag39_depression_through_casp_query.png", width = 7, height = 7)
##We query the graph to plot the conditional probability of depression give
##perceived health
sphus.levels <- c("poor","fair","good",
"very good","excellent","No Info/Don't Know/\nRefused")
depr.fixed <- as.character(seq(0,12)) ##least depressed to most depression
##Loop follows the same structure as the first with age so it is not commented
depr.sphus.res <- c()
for(dag in dagfit.list) {
for (depr.i in depr.fixed) {
temp.res <- c()
for (j in sphus.levels) {
temp.res <- c(temp.res,
cpquery(
dag,
n = 10 ^ 6,
evidence = (sphus == j),
event = (depression %in% depr.i)
))
}
depr.sphus.res <- c(depr.sphus.res, temp.res)
}
}
##create conditional probability data frame
depr.sphus.df <- data.frame(cond.probs = depr.sphus.res,
sphus = rep(rep(sphus.levels, length(depr.fixed)),
length(dagfit.list)),
depression = factor(rep(rep(depr.fixed,
each = length(sphus.levels)),
length(dagfit.list)),
levels = depr.fixed),
dag = rep(c("dag_39", "dag_32", "dag_31"),
each = length(sphus.levels)*length(depr.fixed)))
depr.sphus.df$sphus <- factor(depr.sphus.df$sphus, levels = sphus.levels)
##rename sphus levels to match other plots
levels(depr.sphus.df$sphus)[6] <- "No Info/Don't Know/Refused"
##create depression groups
depr.sphus.df <- depr.sphus.df %>%
mutate(class = case_when(depression %in% c("0", "1", "2", "3") ~ "Low Depression (0-3)",
depression %in% c("4", "5", "6", "7", "8") ~ "Mild Depression (4-8)",
TRUE ~ "High Depression (9-12)"))
##calc cond prob in lowest or highest by marginalizing over the levels in the groups
depr.sphus.df <- depr.sphus.df %>% group_by(sphus, class, dag) %>%
summarise(cond.probs = sum(cond.probs)) %>% ungroup()
depr.sphus.df$depression = depr.sphus.df$class
depr.sphus.df$depression = factor(depr.sphus.df$depression,
levels = c("Low Depression (0-3)",
"Mild Depression (4-8)",
"High Depression (9-12)"))
##Plot conditional probabilities for low/Mid/high Depr given sphus levels
##Only plotting DAG39 because found relatively equivalent to DAG32
ggplot(depr.sphus.df %>% dplyr::filter(dag == "dag_39"))+
geom_bar(aes(x = sphus, y = cond.probs),
fill = "lightblue", color = "darkblue",
stat = "identity")+
labs(x = "Self-Perceived Health (SPHUS)", y = "P(Depression|SPHUS)")+
facet_wrap(~depression, nrow = 4)+
theme_bw()+
ggtitle("DAG 39: Probability of Depression Given Self-Perceived Health (SPHUS)")+
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, size = 8, hjust = 1))
ggsave("dag39_depression_through_sphus_query.png", width = 7, height = 7)
##Examples of cyclic and acyclic graphs
cyclic.graph <- empty.graph(LETTERS[1:5])
arcs(cyclic.graph, check.cycles = F) <- matrix(c("A", "B",
"B", "C",
"C", "A",
"B", "D",
"D", "E"),
ncol = 2, byrow = T,
dimnames = list(NULL, c("from", "to")))
dag.example <- empty.graph(LETTERS[1:5])
arcs(dag.example) <- matrix(c("A", "B",
"B", "C",
"B", "D",
"D", "E"),
ncol = 2, byrow = T,
dimnames = list(NULL, c("from", "to")))
##Save graphs
png("cyclic_graph_example.png")
graphviz.plot(cyclic.graph, layout = "dot")
dev.off()
png("DAG_example.png")
graphviz.plot(dag.example, layout = "dot")
dev.off()
##select graphs
base_dag <- oversampled_models[["base_dag"]] ##base dag
dag_39 <- oversampled_models[["dag_39"]] ##best dag with casp and depr added
dag_32 <- oversampled_models[["dag_32"]] ##second best with depr and drinking
dag_31 <- oversampled_models[["dag_31"]] ##most generalizable with phys_activity and drinking
##rename nodes
new_nodes <- c("cognitive\nimpairment", "sex","age","education","perceived\nhealth","bmi",
"physical\nactivity", "smoking","daily\nsmoking","drinking",
"quality\nof life","depression", "hhsize", "marital\nstatus","income")
base_dag <- rename.nodes(base_dag, new_nodes)
dag_39 <- rename.nodes(dag_39, new_nodes)
dag_32 <- rename.nodes(dag_32, new_nodes)
dag_31 <- rename.nodes(dag_31, new_nodes)
##visualizing dags and chaning font
##We needed a screen capture to get these plots into the report
pdf("select_DAGS-%03d.pdf", onefile = FALSE)
graphviz.compare.font(base_dag,
dag_39,
dag_32,
dag_31, font = 18)
dev.off()
##Here we make a table with each of the variables,
##Their levels, and a brief description for those that are not obvious
##definiing each variable
definitions <- c("Defined using cognitive scores made from recall and orientation. Severe is 1.5 sd below the mean. Mild is between 1.5 and 1 sd below the mean. Unimpaired is the rest.",
"--", "--", "--", "Self-perceived health from a US survey",
"Body Mass Index",
"Measure sports, heavy housework, or physical labor",
"Currently smoking", "Every smoked daily for at least 1 year",
"Drinking levels for the past 3 months (wave 1: 6 months",
"CASP score. Measures feelings of control, autonomy, pleasure, and self-realization",
"EURO-D score. Measures depressed mood, pessimism, suicidality, guilt, sleep, interest, irritability, appetite, fatigue, concentration, enjoyment and teaffulness",
"Household size", "--", "Net income divided by household size")
##manually specify some levels to make more interpretable
cogscore.levels <- cogscore.levels ##defined earlier
sex.levels <- female ##defined earlier
age.levels <- age.levels ##defined earlier
education.levels <- education.levels ##defined earlier
health.levels <- sphus.levels ##defined earlier
bmi.levels <- c("Underweight", "Overweight", "Healthy", "No Info/Don't Know/Refused")
phys.levels <- c("Rare/Never", "1-3 per month","1 per week",
">1 per Week", "No Info/Don't Know/Refused")
smoking.levels <- daily.smoke.lev <- c("No", "Yes", "No Info/Don't Know/Refused")
drink.levels.new <- c("Not at all","<1 times\nper month",
"1-2 days\nper week","1-2 times\nper month",
"3-4 days\nper week", "5-6 days\nper week",
"Almost daily","No Info/Don't Know/\nRefused")
quality.life.levels <- casp.levels ##defined earlier
depression.levels.new <- c("0-12 (each its own level), No Info/Don't Know/Refused")
hhsize.levels <- c("0-12, 14 (each its own level)") ##each their own level, but 13 is missing
marital.levels <- c("Divorced","Married w/o Spouse",
"Married w/ Spouse","Never Married",
"Partnership","Widowed","No Info/Don't Know/Refused")
income_levels <- c("[-10000,0), [0,10000), ..., [140000,150000), [150000,Max)")
##combine into single characters for table
levels.list <- list(cogscore.levels, sex.levels, age.levels, education.levels,
health.levels, bmi.levels, phys.levels, smoking.levels,
daily.smoke.lev, drink.levels.new, quality.life.levels,
depression.levels.new, hhsize.levels, marital.levels, income_levels)
var_levels <- sapply(levels.list, paste, collapse = ", ")
variable_table <- data.frame(Variable = new_nodes, Levels = var_levels,
Definitions = definitions)
##build table
kbl((variable_table),  table.attr = "style='width:80%;'", booktabs = T) %>%
kable_classic()%>%
column_spec(column = c(1), width = "1em")%>%
column_spec(column = c(2,3), width = "8em") %>%
kable_styling(font = 12)
##first select the countries used internally
country_intern <- country_intern ##internally countries; created before
country_extern <- countries[!(countries %in% country_intern)]
country_vector <- sapply(list(country_intern, "--", ##once for train/test each
country_extern), paste, collapse = ", ")
##create table data
country_table <- data.frame(dataset = c("Internal Training",
"Internal Validation",
"External Validation"),
countries = country_vector, ##vector w/ countries in eahc
percentage = c(length(country_intern)/length(countries),
"--",
length(country_extern)/length(countries)),
N = c(nrow(train_6), ##internal training
nrow(validation_6),##internal validation
nrow(external_df6))) ##external n
colnames(country_table) <- c("Dataset", "Countries",
"Proportion of Countries", "N")
##create table
kbl((country_table),  table.attr = "style='width:80%;'", booktabs = T) %>%
kable_classic()%>%
column_spec(column = c(2), width = "15em")%>%
# column_spec(column = c(2,3), width = "8em") %>%
kable_styling(font = 12)
##Here we make a table with each of the variables,
##Their levels, and a brief description for those that are not obvious
##definiing each variable
definitions <- c("Defined using cognitive scores made from recall and orientation. Severe is 1.5 sd below the mean. Mild is between 1.5 and 1 sd below the mean. Unimpaired is the rest.",
"--", "--", "--", "Self-perceived health from a US survey",
"Body Mass Index",
"Measured sports, heavy housework, or physical labor",
"Currently smoking", "Ever smoked daily for at least 1 year",
"Drinking levels for the past 3 months (wave 1: 6 months",
"CASP score. Measures feelings of control, autonomy, pleasure, and self-realization",
"EURO-D score. Measures depressed mood, pessimism, suicidality, guilt, sleep, interest, irritability, appetite, fatigue, concentration, enjoyment and teaffulness",
"Household size", "--", "Net income divided by household size")
##manually specify some levels to make more interpretable
cogscore.levels <- cogscore.levels ##defined earlier
rm(list = ls())
gc()
##read in cross sectional data
train <- read.csv("./cross_sec1_data.csv", stringsAsFactors = T)
##All are factors so convert to factors
train <- data.frame(lapply(train, as.factor))
str(train)
##Load Packages
packages <- c("caret", "ggplot2", "tidyverse", "gridExtra", "ggpubr", "data.table",
"dplyr", "mice", "VIM", "JointAI", "corrplot", "kableExtra",
"bnlearn","gRain", "rlist", "parallel", "foreach", "doParallel")
sapply(packages, function(X){if(!(X %in% installed.packages())) install.packages(X)})
sapply(packages, require, character.only = TRUE)
##rename variables for easy of understanding
vars <- c("cogscore", "country", "female", "age",
"education", "sphus", "bmi", "phys_activity",
"smoking", "ever_smoked", "drinking", "casp", "depression",
"hhsize","marital_stat", "norm_income")
colnames(train) <- vars
##for cogscore, rename factors as 1= Severe, 2 = Mild, 3 = Unimpaired
train$cogscore <- factor(train$cogscore,
labels = c("Severe", "Mild", "Unimpaired"))
##split data into internal (train) and external (validation) set
##based on countries
##set seed for reproducibility
seed <- 42
set.seed(seed)
##get country lists and randomly sample the list for internal validation
countries <- unique(train$country)
country_nintern<- ceiling(0.65*length(countries))
country_intern <- sample(countries, size = country_nintern)
##subset data for internal validation and external validation
external_df <- train[!(train$country %in% country_intern),] ##external validation set
external_df$country <- as.factor(as.character(external_df$country)) ##levels only those in df
train <- train[train$country %in% country_intern, ]##internal validation set
train$country <- as.factor(as.character(train$country)) ##levels only those in df
##Removing country from all because it is just used to create the
##train/test split
train <- train %>% dplyr::select(-country)
external_df <- external_df %>% dplyr::select(-country)
##Creating Datasets that wil be needed
set.seed(seed) ##set seed for reproducibility
##create Model of interest AND internal train/validation split
##(This is separate from the the external validation, which tests country generalizability
##Model of interest
train_6 <- train
##External validation model of interst
external_df6 <- external_df
##train/validation split (80/20)
train_ind <- createDataPartition(train_6$cogscore, list=FALSE,
p=0.8) ##train index
train_6 <- train_6[train_ind,] ##training set
validation_6 <- train_6[-train_ind,] ##validation set
##Also create upsampling dataset since the data is unbalanced to improve
##structure learning and prediction
train_6_oversample <- train_6 %>% group_by(cogscore) %>% sample_n(max(table(train_6$cogscore)), replace = T) %>% as.data.frame()
age.levels <- levels(train_6$age) ##age levels
cogscore.levels <- levels(train$cogscore) ##cogscore levels
n.cog <- length(cogscore.levels) ##number of levels in cogscore; will be 3
female <- levels(train_6$female) ##sex (female) levels
education.levels <- c("In School/Other",
"No Education",
"Primary", "Lower Secondary",
"Upper Secondary ", "Post-secondary Non-tertiary",
"First State Tertiary", "Second State Tertiary",
"No Info/Don't Know/Refused")
depr <- levels(train_6$depression)
life_qual <- levels(train$casp)
drink.levels <- c("Not at all",
"<1 times\nper month", "1-2 days\nper week",
"1-2 times\nper month","3-4 days\nper week",
"5-6 days\nper week", "Almost daily","No Info/Don't Know/\nRefused")
##Query the graph to find the probability of low quality of life given educaiton
education.levels <- education.levels
casp.fixed <- c("[12,16)","[16,20)", "[20,24)", ##Low
"[24,28)","[28,32)",  "[32,36)", "[36,40)", ##Mid
"[40,44)", "[44,48)", "[48,52)") ##High
##We query the graph to find the conditional probability of depression
##given quality of life
casp.levels <- levels(train_6$casp) ##levels defined before
depr.fixed <- as.character(seq(0,12)) ##least depressed to most depression
##We query the graph to plot the conditional probability of depression give
##perceived health
sphus.levels <- c("poor","fair","good",
"very good","excellent","No Info/Don't Know/\nRefused")
depr.fixed <- as.character(seq(0,12)) ##least depressed to most depression
##Here we make a table with each of the variables,
##Their levels, and a brief description for those that are not obvious
##definiing each variable
definitions <- c("Defined using cognitive scores made from recall and orientation. Severe is 1.5 sd below the mean. Mild is between 1.5 and 1 sd below the mean. Unimpaired is the rest.",
"--", "--", "--", "Self-perceived health from a US survey",
"Body Mass Index",
"Measured sports, heavy housework, or physical labor",
"Currently smoking", "Ever smoked daily for at least 1 year",
"Drinking levels for the past 3 months (wave 1: 6 months",
"CASP score. Measures feelings of control, autonomy, pleasure, and self-realization",
"EURO-D score. Measures depressed mood, pessimism, suicidality, guilt, sleep, interest, irritability, appetite, fatigue, concentration, enjoyment and teaffulness",
"Household size", "--", "Net income divided by household size")
##manually specify some levels to make more interpretable
cogscore.levels <- cogscore.levels ##defined earlier
sex.levels <- female ##defined earlier
age.levels <- age.levels ##defined earlier
education.levels <- education.levels ##defined earlier
health.levels <- sphus.levels ##defined earlier
bmi.levels <- c("Underweight", "Overweight", "Healthy", "No Info/Don't Know/Refused")
phys.levels <- c("Rare/Never", "1-3 per month","1 per week",
">1 per Week", "No Info/Don't Know/Refused")
smoking.levels <- daily.smoke.lev <- c("No", "Yes", "No Info/Don't Know/Refused")
drink.levels.new <- c("Not at all","<1 times\nper month",
"1-2 days\nper week","1-2 times\nper month",
"3-4 days\nper week", "5-6 days\nper week",
"Almost daily","No Info/Don't Know/\nRefused")
quality.life.levels <- casp.levels ##defined earlier
depression.levels.new <- c("0-12 (each its own level), No Info/Don't Know/Refused")
hhsize.levels <- c("0-12, 14 (each its own level)") ##each their own level, but 13 is missing
marital.levels <- c("Divorced","Married w/o Spouse",
"Married w/ Spouse","Never Married",
"Partnership","Widowed","No Info/Don't Know/Refused")
income_levels <- c("[-10000,0), [0,10000), ..., [140000,150000), [150000,Max)")
##combine into single characters for table
levels.list <- list(cogscore.levels, sex.levels, age.levels, education.levels,
health.levels, bmi.levels, phys.levels, smoking.levels,
daily.smoke.lev, drink.levels.new, quality.life.levels,
depression.levels.new, hhsize.levels, marital.levels, income_levels)
var_levels <- sapply(levels.list, paste, collapse = ", ")
variable_table <- data.frame(Variable = new_nodes, Levels = var_levels,
Definitions = definitions)
##rename nodes
new_nodes <- c("cognitive\nimpairment", "sex","age","education","perceived\nhealth","bmi",
"physical\nactivity", "smoking","daily\nsmoking","drinking",
"quality\nof life","depression", "hhsize", "marital\nstatus","income")
##Here we make a table with each of the variables,
##Their levels, and a brief description for those that are not obvious
##definiing each variable
definitions <- c("Defined using cognitive scores made from recall and orientation. Severe is 1.5 sd below the mean. Mild is between 1.5 and 1 sd below the mean. Unimpaired is the rest.",
"--", "--", "--", "Self-perceived health from a US survey",
"Body Mass Index",
"Measured sports, heavy housework, or physical labor",
"Currently smoking", "Ever smoked daily for at least 1 year",
"Drinking levels for the past 3 months (wave 1: 6 months",
"CASP score. Measures feelings of control, autonomy, pleasure, and self-realization",
"EURO-D score. Measures depressed mood, pessimism, suicidality, guilt, sleep, interest, irritability, appetite, fatigue, concentration, enjoyment and teaffulness",
"Household size", "--", "Net income divided by household size")
##manually specify some levels to make more interpretable
cogscore.levels <- cogscore.levels ##defined earlier
sex.levels <- female ##defined earlier
age.levels <- age.levels ##defined earlier
education.levels <- education.levels ##defined earlier
health.levels <- sphus.levels ##defined earlier
bmi.levels <- c("Underweight", "Overweight", "Healthy", "No Info/Don't Know/Refused")
phys.levels <- c("Rare/Never", "1-3 per month","1 per week",
">1 per Week", "No Info/Don't Know/Refused")
smoking.levels <- daily.smoke.lev <- c("No", "Yes", "No Info/Don't Know/Refused")
drink.levels.new <- c("Not at all","<1 times\nper month",
"1-2 days\nper week","1-2 times\nper month",
"3-4 days\nper week", "5-6 days\nper week",
"Almost daily","No Info/Don't Know/\nRefused")
quality.life.levels <- casp.levels ##defined earlier
depression.levels.new <- c("0-12 (each its own level), No Info/Don't Know/Refused")
hhsize.levels <- c("0-12, 14 (each its own level)") ##each their own level, but 13 is missing
marital.levels <- c("Divorced","Married w/o Spouse",
"Married w/ Spouse","Never Married",
"Partnership","Widowed","No Info/Don't Know/Refused")
income_levels <- c("[-10000,0), [0,10000), ..., [140000,150000), [150000,Max)")
##combine into single characters for table
levels.list <- list(cogscore.levels, sex.levels, age.levels, education.levels,
health.levels, bmi.levels, phys.levels, smoking.levels,
daily.smoke.lev, drink.levels.new, quality.life.levels,
depression.levels.new, hhsize.levels, marital.levels, income_levels)
var_levels <- sapply(levels.list, paste, collapse = ", ")
variable_table <- data.frame(Variable = new_nodes, Levels = var_levels,
Definitions = definitions)
##build table
kbl((variable_table),  table.attr = "style='width:80%;'", booktabs = T) %>%
kable_classic()%>%
column_spec(column = c(1), width = "1em")%>%
column_spec(column = c(2,3), width = "8em") %>%
kable_styling(font = 12)
kbl((variable_table),  table.attr = "style='width:80%;'", booktabs = T) %>%
kable_classic()%>%
column_spec(column = c(1), width = "1em")%>%
column_spec(column = c(2,3), width = "8em") %>%
kable_styling(font = 12)
##Here we make a table with each of the variables,
##Their levels, and a brief description for those that are not obvious
##definiing each variable
definitions <- c("Defined using cognitive scores made from recall and orientation. Severe is 1.5 sd below the mean. Mild is between 1.5 and 1 sd below the mean. Unimpaired is the rest.",
"--", "--", "--", "Self-perceived health from a US survey",
"Body Mass Index",
"Measured sports, heavy housework, or physical labor",
"Currently smoking", "Ever smoked daily for at least 1 year",
"Drinking levels for the past 3 months (wave 1: 6 months)",
"CASP score. Measures feelings of control, autonomy, pleasure, and self-realization",
"EURO-D score. Measures depressed mood, pessimism, suicidality, guilt, sleep, interest, irritability, appetite, fatigue, concentration, enjoyment and teaffulness",
"Household size", "--", "Net income divided by household size")
##manually specify some levels to make more interpretable
cogscore.levels <- cogscore.levels ##defined earlier
sex.levels <- female ##defined earlier
age.levels <- age.levels ##defined earlier
education.levels <- education.levels ##defined earlier
health.levels <- sphus.levels ##defined earlier
bmi.levels <- c("Underweight", "Overweight", "Healthy", "No Info/Don't Know/Refused")
phys.levels <- c("Rare/Never", "1-3 per month","1 per week",
">1 per Week", "No Info/Don't Know/Refused")
smoking.levels <- daily.smoke.lev <- c("No", "Yes", "No Info/Don't Know/Refused")
drink.levels.new <- c("Not at all","<1 times\nper month",
"1-2 days\nper week","1-2 times\nper month",
"3-4 days\nper week", "5-6 days\nper week",
"Almost daily","No Info/Don't Know/\nRefused")
quality.life.levels <- casp.levels ##defined earlier
depression.levels.new <- c("0-12 (each its own level), No Info/Don't Know/Refused")
hhsize.levels <- c("0-12, 14 (each its own level)") ##each their own level, but 13 is missing
marital.levels <- c("Divorced","Married w/o Spouse",
"Married w/ Spouse","Never Married",
"Partnership","Widowed","No Info/Don't Know/Refused")
income_levels <- c("[-10000,0), [0,10000), ..., [140000,150000), [150000,Max)")
##combine into single characters for table
levels.list <- list(cogscore.levels, sex.levels, age.levels, education.levels,
health.levels, bmi.levels, phys.levels, smoking.levels,
daily.smoke.lev, drink.levels.new, quality.life.levels,
depression.levels.new, hhsize.levels, marital.levels, income_levels)
var_levels <- sapply(levels.list, paste, collapse = ", ")
variable_table <- data.frame(Variable = new_nodes, Levels = var_levels,
Definitions = definitions)
##build table
kbl((variable_table),  table.attr = "style='width:80%;'", booktabs = T) %>%
kable_classic()%>%
column_spec(column = c(1), width = "1em")%>%
column_spec(column = c(2,3), width = "8em") %>%
kable_styling(font = 12)
kbl((variable_table),  table.attr = "style='width:80%;'", booktabs = T) %>%
kable_classic()%>%
column_spec(column = c(1), width = "1em")%>%
column_spec(column = c(2,3), width = "8em") %>%
kable_styling(font = 16)
93212+46913
##read in cross sectional data
train <- read.csv("./cross_sec1_data.csv", stringsAsFactors = T)
2.305-1.656
